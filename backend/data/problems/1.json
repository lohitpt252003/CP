{
  "problem_id": "1",
  "title": "Coin Change - Minimum Coins",
  "statement": "You are given an integer array 'coins' representing coins of different denominations and an integer 'amount' representing a total amount of money. Return the fewest number of coins needed to make up that amount. If that amount cannot be made up by any combination of the coins, return -1.",
  "input_format": "The first line contains an integer N (1 <= N <= 100) and a space and then integer amount (0 <= amount <= 10000)., the number of different coin denominations.\nThe second line contains N space-separated integers denoting the denominations.",
  "output_format": "Print a single integer - the minimum number of coins required to make up the given amount. Print -1 if it's not possible.",
  "constraints": {
    "1 <= N <= 100": true,
    "1 <= coins[i] <= 10000": true,
    "0 <= amount <= 10000": true
  },
  "time_limit": "1s",
  "sample_testcases": [
    {
      "input": "3 11\n1 2 5",
      "output": "3"
    },
    {
      "input": "2 3\n2 4",
      "output": "-1"
    },
    {
      "input": "1 0\n2",
      "output": "0"
    }
  ],
  "tags": ["DP", "Greedy", "Optimization", "Coins"]
}
